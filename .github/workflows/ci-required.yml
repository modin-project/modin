name: ci-required
on: pull_request
concurrency:
  # Cancel other jobs in the same branch. We don't care whether CI passes
  # on old commits.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
env:
  MODIN_GITHUB_CI: true

jobs:

  check-pr-title:
    runs-on: ubuntu-latest
    steps:
    - uses: Slashgear/action-check-pr-title@v3.0.0
      with:
        # NOTE: If you change the allowed prefixes here, update
        # the documentation about them in /docs/development/contributing.rst
        regexp: '^(?:FEAT|DOCS|FIX|REFACTOR|TEST|PERF)-#\d+:'

  build-docs:
    name: build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9.x"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: '**/requirements-doc.txt'
      - run: pip install -r docs/requirements-doc.txt
      - run: cd docs && sphinx-build -T -E -W -b html . build

  lint-pydocstyle:
    name: lint (pydocstyle)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/python-only
      # The `numpydoc` version here MUST match the versions in the dev requirements files.
      - run: pip install pytest pytest-cov pydocstyle numpydoc==1.1.0
      - run: python -m pytest scripts/test
      - run: pip install -e ".[all]"
      - run: |
          python scripts/doc_checker.py --add-ignore=D101,D102,D103,D105 --disable-numpydoc \
            modin/pandas/dataframe.py modin/pandas/series.py \
            modin/pandas/groupby.py \
            modin/pandas/series_utils.py modin/pandas/general.py \
            modin/pandas/plotting.py modin/pandas/utils.py \
            modin/pandas/iterator.py modin/pandas/indexing.py \
      - run: python scripts/doc_checker.py modin/core/dataframe
      - run: python scripts/doc_checker.py modin/core/execution/dask
      - run: |
          python scripts/doc_checker.py \
            modin/pandas/accessor.py modin/pandas/general.py \
            modin/pandas/groupby.py modin/pandas/indexing.py \
            modin/pandas/iterator.py modin/pandas/plotting.py \
            modin/pandas/series_utils.py modin/pandas/utils.py \
            modin/pandas/base.py \
            modin/pandas/io.py \
            asv_bench/benchmarks/utils \
            asv_bench/benchmarks/__init__.py asv_bench/benchmarks/io/__init__.py \
            asv_bench/benchmarks/scalability/__init__.py \
            modin/core/io \
            modin/pandas/series.py \
            modin/core/execution/python \
            modin/pandas/dataframe.py \
            modin/config/__init__.py \
            modin/config/__main__.py \
            modin/config/envvars.py \
            modin/config/pubsub.py
      - run: python scripts/doc_checker.py modin/distributed
      - run: python scripts/doc_checker.py modin/utils.py
      - run: python scripts/doc_checker.py modin/experimental/sklearn
      - run: |
          python scripts/doc_checker.py modin/experimental/xgboost/__init__.py \
            modin/experimental/xgboost/utils.py modin/experimental/xgboost/xgboost.py \
            modin/experimental/xgboost/xgboost_ray.py
      - run: python scripts/doc_checker.py modin/core/execution/ray
      - run: |
          python scripts/doc_checker.py modin/core/execution/dispatching/factories/factories.py \
            modin/core/execution/dispatching/factories/dispatcher.py                            \
      - run: python scripts/doc_checker.py scripts/doc_checker.py
      - run: |
          python scripts/doc_checker.py modin/experimental/pandas/io.py \
            modin/experimental/pandas/__init__.py
      - run: python scripts/doc_checker.py modin/core/storage_formats/base
      - run: python scripts/doc_checker.py modin/core/storage_formats/pandas
      - run: |
          python scripts/doc_checker.py \
            modin/experimental/core/execution/native/implementations/hdk_on_native/dataframe \
            modin/experimental/core/execution/native/implementations/hdk_on_native/io \
            modin/experimental/core/execution/native/implementations/hdk_on_native/partitioning \
            modin/experimental/core/execution/native/implementations/hdk_on_native/calcite_algebra.py \
            modin/experimental/core/execution/native/implementations/hdk_on_native/calcite_builder.py \
            modin/experimental/core/execution/native/implementations/hdk_on_native/calcite_serializer.py \
            modin/experimental/core/execution/native/implementations/hdk_on_native/df_algebra.py \
            modin/experimental/core/execution/native/implementations/hdk_on_native/expr.py \
            modin/experimental/core/execution/native/implementations/hdk_on_native/hdk_worker.py \
      - run: python scripts/doc_checker.py modin/experimental/core/storage_formats/hdk
      - run: python scripts/doc_checker.py modin/experimental/core/execution/native/implementations/hdk_on_native/interchange/dataframe_protocol
      - run: python scripts/doc_checker.py modin/experimental/batch/pipeline.py
      - run: python scripts/doc_checker.py modin/logging

  lint-black-isort:
    name: lint (black and isort)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/python-only
      - run: pip install black>=24.1.0 isort>=5.12
      # NOTE: keep the black command here in sync with the pre-commit hook in
      # /contributing/pre-commit
      - run: black --check --diff modin/ asv_bench/benchmarks scripts/doc_checker.py
      - run: isort . --check-only
