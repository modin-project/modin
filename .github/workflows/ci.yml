name: ci
on: pull_request
jobs:
  lint-commit:
    name: lint (commit)
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - run: npm install --save-dev @commitlint/{config-conventional,cli} commitlint-plugin-jira-rules commitlint-config-jira
      - name: Add dependencies for commitlint action
        run: echo "::set-env name=NODE_PATH::$GITHUB_WORKSPACE/node_modules"
      - run: git remote add upstream https://github.com/modin-project/modin.git
      - run: git fetch upstream
      - run: npx commitlint --from upstream/master --to HEAD --verbose
  lint-black:
    name: lint (black)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"
          architecture: "x64"
      - run: pip install black
      - run: black --check --diff modin/
  lint-flake8:
    name: lint (flake8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"
          architecture: "x64"
      - run: pip install flake8 flake8-print
      - run: flake8 --enable=T modin
  test-api:
    runs-on: ubuntu-latest
    name: test api
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"
          architecture: "x64"
      - run: sudo apt update && sudo apt install -y libhdf5-dev
      - run: pip install -r requirements.txt
      - run: python -m pytest modin/pandas/test/test_api.py
  test-headers:
    runs-on: ubuntu-latest
    name: test-headers
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"
          architecture: "x64"
      - run: pip install -r requirements.txt
      - run: python -m pytest modin/test/test_headers.py
  test-internals:
    runs-on: ubuntu-latest
    name: test-internals
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: "3.6.x"
          architecture: "x64"
      - run: pip install -r requirements.txt
      - run: python -m pytest modin/test/test_publisher.py modin/data_management/test/test_dispatcher.py
  test-all:
    needs: [lint-commit, lint-flake8, lint-black, test-api, test-headers]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6.x", "3.7.x"]
        engine: ["python", "ray", "dask"]
        part: ["Reduction_A", "Reduction_B", "Binary", "MapMetadata", "UDF", "Default", "Window", "Indexing", "Iter", "JoinSort", 3]
    env:
      MODIN_ENGINE: ${{matrix.engine}}
      MODIN_MEMORY: 1000000000
    name: test (${{matrix.engine}}, part ${{matrix.part}}, python ${{matrix.python-version}})
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
          architecture: "x64"
      - name: Install HDF5
        if: matrix.part == 3
        run: sudo apt update && sudo apt install -y libhdf5-dev
      - run: pip install -r requirements.txt
      - run: bash run-tests.sh ${{matrix.engine}} -k "TestDataFrame${{matrix.part}}"
        if: matrix.part != 3
      - run: python -m pytest modin/pandas/test/test_series.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_rolling.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_concat.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_groupby.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_reshape.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_general.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_io.py
        if: matrix.part == 3
      - run: python -m pytest modin/experimental/pandas/test/test_io_exp.py
        if: matrix.part == 3
      - run: bash <(curl -s https://codecov.io/bash)
  test-experimental:
    needs: [lint-commit, lint-flake8, lint-black, test-api, test-headers]
    runs-on: ubuntu-latest
    env:
      MODIN_ENGINE: "python"
      MODIN_EXPERIMENTAL: "True"
      MODIN_MEMORY: 1000000000
    name: test experimental
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"
          architecture: "x64"
      - run: pip install -r requirements.txt
      - run: python -m pytest modin/pandas/test/test_dataframe.py::TestDataFrameMapMetadata
      - run: python -m pytest modin/pandas/test/test_series.py
      - run: python -m pytest modin/pandas/test/test_io.py
      - run: bash <(curl -s https://codecov.io/bash)
  test-windows:
    needs: [lint-commit, lint-flake8, lint-black, test-api, test-headers]
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.6.x", "3.7.x"]
        engine: ["ray", "dask"]
        part: ["Reduction_A", "Reduction_B", "Binary", "MapMetadata", "UDF", "Default", "Window", "Indexing", "Iter", "JoinSort", 3]
    env:
      MODIN_ENGINE: ${{matrix.engine}}
      MODIN_MEMORY: 1000000000
    name: test-windows
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
          architecture: "x64"
      - run: pip install -r requirements.txt
      - run: python -m pytest modin/pandas/test/test_dataframe.py::TestDataFrame${{matrix.part}}
        if: matrix.part != 3
      - run: python -m pytest modin/pandas/test/test_series.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_rolling.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_concat.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_groupby.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_reshape.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_general.py
        if: matrix.part == 3
      - run: python -m pytest modin/pandas/test/test_io.py
        if: matrix.part == 3
      - run: choco install codecov
      - run: codecov -f .\coverage.xml -t ${{secrets.CODECOV_TOKEN}}
  test-pyarrow:
    needs: [lint-commit, lint-flake8, lint-black, test-api, test-headers]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6.x", "3.7.x"]
    env:
      MODIN_BACKEND: pyarrow
      MODIN_EXPERIMENTAL: "True"
    name: test (pyarrow, python ${{matrix.python-version}})
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
          architecture: "x64"
      - run: sudo apt update && sudo apt install -y libhdf5-dev
      - run: pip install -r requirements.txt
      - run: python -m pytest modin/pandas/test/test_io.py::test_from_csv
