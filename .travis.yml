sudo: required

language: generic
cache:
  directories:
    - $HOME/.cache/pip

matrix:
  include:
    - os: linux
      dist: trusty
      env:
        - PYTHON=2.7
        - MODIN_ENGINE=ray
        - MODIN_DF_TEST=ONE

    - os: linux
      dist: trusty
      env:
        - PYTHON=2.7
        - MODIN_ENGINE=ray
        - MODIN_DF_TEST=TWO

    - os: linux
      dist: trusty
      env:
        - PYTHON=3.6
        - MODIN_ENGINE=ray
        - MODIN_DF_TEST=ONE

    - os: linux
      dist: trusty
      env:
        - PYTHON=3.6
        - MODIN_ENGINE=ray
        - MODIN_DF_TEST=TWO

    - os: linux
      dist: trusty
      env:
        - PYTHON=2.7
        - MODIN_DEBUG=1
        - MODIN_DF_TEST=ALL

    - os: linux
      dist: trusty
      env:
        - PYTHON=3.6
        - MODIN_DEBUG=1
        - MODIN_DF_TEST=ALL

    - os: linux
      dist: trusty
      env:
        - LINT=1
      script:
        - export PATH="$HOME/miniconda/bin:$PATH"
        - black --check modin/
        - flake8 .

    - os: linux
      dist: trusty
      env:
        - PYTHON=3.6
        - API_COMPAT=1
      script:
        - export PATH="$HOME/miniconda/bin:$PATH"
        - python -m pytest modin/pandas/test/test_api.py

    - os: linux
      dist: trusty
      env:
        - PYTHON=3.6
        - MODIN_BACKEND=pyarrow
        - MODIN_EXPERIMENTAL=True
      script:
        - export PATH="$HOME/miniconda/bin:$PATH"
        - python -m pytest --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_io.py::test_from_csv --cov-append

install:
  - ./ci/travis/install-dependencies.sh

script:
  - export PATH="$HOME/miniconda/bin:$PATH"
  - if [[ "$PYTHON" == "2.7" ]]; then python ./ci/travis/strip-type-hints.py; fi
  - curl -s https://codecov.io/bash > codecov.sh
  - if [[ "$MODIN_DF_TEST" == "ONE" ]]; then python -m pytest -n auto --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_dataframe.py::TestDFPartOne --cov-append; fi
  - if [[ "$MODIN_DF_TEST" == "TWO" ]]; then python -m pytest -n auto --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_dataframe.py::TestDFPartTwo --cov-append; fi
  - if [[ "$MODIN_DF_TEST" == "ALL" ]]; then python -m pytest -n auto --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_dataframe.py --cov-append; fi
  - python -m pytest --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_series.py --cov-append
  - python -m pytest --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_concat.py --cov-append
  - python -m pytest --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_groupby.py --cov-append
  - python -m pytest --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_reshape.py --cov-append
  - python -m pytest --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_general.py --cov-append
  - pip install numexpr
  - python -m pytest --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/pandas/test/test_io.py --cov-append
  - python -m pytest --disable-pytest-warnings --cov-config=.coveragerc --cov=modin modin/experimental/pandas/test/test_io_exp.py --cov-append
  - bash codecov.sh
